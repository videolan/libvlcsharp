<Project Sdk="MSBuild.Sdk.Extras">
  <PropertyGroup>
    <Title>LibVLCSharp</Title>
    <Summary>The official .NET wrapper around LibVLC.</Summary>
    <Description>LibVLCSharp is a cross-platform audio and video API for .NET platforms based on VideoLAN's LibVLC Library. It provides a comprehensive multimedia API that can be used across mobile, server and desktop to render video and output audio. Mono, .NET Framework and .NET Core runtimes are supported.

This package contains the core features of LibVLCSharp (libvlc loading and initialization, .NET-friendly classes to ease the use of libvlc...). All other `LibVLCSharp.*` packages depend on this one.
Features:
- Play every media file formats, every codec and every streaming protocols
- Run on every platform, from desktop (Windows, Linux, Mac) to mobile (Android, iOS) and TVs
- Hardware and efficient decoding on every platform, up to 8K
- Network browsing for distant filesystems (SMB, FTP, SFTP, NFS...) and servers (UPnP, DLNA)
- Playback of Audio CD, DVD and Bluray with menu navigation
- Support for HDR, including tonemapping for SDR streams
- Audio passthrough with SPDIF and HDMI, including for Audio HD codecs, like DD+, TrueHD or DTS-HD
- Support for video and audio filters
- Support for 360 video and 3D audio playback, including Ambisonics
- Able to cast and stream to distant renderers, like Chromecast and UPnP renderers.

This package also contains the views for the following platforms:

- Android
- iOS
- Mac
- tvOS
- UWP

If you need Xamarin.Forms support, see LibVLCSharp.Forms. 

LibVLC needs to be installed separately, see VideoLAN.LibVLC.* packages.</Description>
    <TargetFrameworks>netstandard2.0;netstandard1.1;net40;net471</TargetFrameworks>
    <TargetFrameworks Condition="!$([MSBuild]::IsOsPlatform('Linux'))">$(TargetFrameworks);MonoAndroid81;Xamarin.iOS10;Xamarin.Mac20;Xamarin.TVOS10</TargetFrameworks>
    <TargetFrameworks Condition="$([MSBuild]::IsOsPlatform('Windows'))">$(TargetFrameworks);uap10.0;uap10.0.16299</TargetFrameworks>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);IncludeAWindow</TargetsForTfmSpecificBuildOutput>
    <RootNamespace>LibVLCSharp</RootNamespace>
    <NeutralLanguage>en</NeutralLanguage>
    <LangVersion>8.0</LangVersion>
    <Nullable>enable</Nullable>
    <Version>3.4.4</Version>
    <PackageId>LibVLCSharp</PackageId>
    <Authors>VideoLAN</Authors>
    <Owners>VideoLAN</Owners>
    <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <UseFullSemVerForNuGet>false</UseFullSemVerForNuGet>
    <PackageLicenseExpression>LGPL-2.1-or-later</PackageLicenseExpression>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://code.videolan.org/videolan/LibVLCSharp</RepositoryUrl>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReleaseNotes>https://code.videolan.org/videolan/LibVLCSharp/blob/master/NEWS</PackageReleaseNotes>
    <PackageTags>libvlc;vlc;videolan;native;c/c++;video;audio;player;media;mediaplayer;codec;ffmpeg;xamarin;graphics;ios;android;linux;windows;macos;cross-platform</PackageTags>
  </PropertyGroup>
  <PropertyGroup Condition="$(NETSTANDARD_ONLY)=='true'">
    <TargetFrameworks>netstandard2.0;netstandard1.1</TargetFrameworks>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.StartsWith('uap'))">
    <GenerateLibraryLayout>true</GenerateLibraryLayout>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="Platforms\**\*.cs" />
    <None Include="Platforms\**\*.cs" />
    <None Include="..\assets\icon.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('MonoAndroid'))">
    <Compile Include="Platforms\Android\**\*.cs" />
    <ProjectReference Include="..\LibVLCSharp.Android.AWindow\LibVLCSharp.Android.AWindow.csproj" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('Xamarin'))">
    <Compile Include="Platforms\Apple\**\*.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('netstandard'))">
    <Compile Remove="Shared\MediaPlayerElement\*.*" />
    <None Include="Shared\MediaPlayerElement\*.*" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net40' ">
    <Compile Remove="Shared\MediaPlayerElement\*.*" />
    <None Include="Shared\MediaPlayerElement\*.*" />
    <PackageReference Include="System.ValueTuple" Version="4.5.0" />
    <PackageReference Include="Microsoft.Bcl.Async" Version="1.0.168" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('uap'))">
    <Compile Include="Platforms\UWP\**\*.cs" />
    <Page Include="Themes\Generic.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <PackageReference Include="System.ValueTuple" Version="4.5.0" />
    <PackageReference Include="SharpDX.Direct3D11" Version="4.2.0" />
  </ItemGroup>
  <Target Name="IncludeAWindow" Condition="$(TargetFramework.StartsWith('MonoAndroid'))">
    <ItemGroup>
      <BuildOutputInPackage Include="$(OutputPath)LibVLCSharp.Android.AWindow.dll" />
    </ItemGroup>
  </Target>
</Project>
