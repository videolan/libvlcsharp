trigger:
- master
- 3.x

pr:
- master
- 3.x

stages:
- stage: Build
  variables:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: true
  jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - template: linux-build.yml

  - job: macOS
    pool:
      vmImage: 'macOS-10.15'
    steps:
    - template: mac-build.yml

  - job: Windows
    pool:
      vmImage: 'windows-latest'
    steps:
    - template: windows-build.yml

- stage: Test
  dependsOn: Build
  condition: succeeded('Build')
  variables:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: true

  jobs:
    - job: test
      pool:
        vmImage: 'windows-latest'
      steps:
        - task: PowerShell@2
          displayName: 'Test'
          inputs:
            targetType: filePath
            filePath: ./buildsystem/build.ps1 
            arguments: -target Test
            workingDirectory: buildsystem

- stage: Deploy
  dependsOn: Test
  condition: and(succeeded('Test'), not(eq(variables['build.reason'], 'PullRequest')))

  jobs:
  - job: feedz
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          artifactName: 'nugets'
          itemPattern: '**/*.nupkg'
          downloadPath: $(Build.Repository.LocalPath)
      - task: PowerShell@2
        displayName: 'Deploy'
        env:
          FEEDZ: $(FEEDZ)
        inputs:
          targetType: filePath
          filePath: ./buildsystem/build.ps1
          arguments: -target CIDeploy
          workingDirectory: buildsystem